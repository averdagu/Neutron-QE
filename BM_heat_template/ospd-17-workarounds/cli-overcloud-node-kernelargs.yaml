---
# Copyright 2022 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
- name: Overcloud Node Set Kernel Args
  hosts: allovercloud
  any_errors_fatal: true
  gather_facts: false
  vars:
    kernel_args: ''
    reboot_wait_timeout: 900
    defer_reboot: false
    tuned_profile: 'throughput-performance'
    tuned_isolated_cores: ''
  pre_tasks:
    - name: Wait for provisioned nodes to boot
      wait_for:
        timeout: '{{ reboot_wait_timeout }}'
        port: 22
        host: '{{ ansible_host }}'
        search_regex: OpenSSH
        delay: 10
        msg: Timeout waiting for provisioned nodes to become available
      connection: local
  tasks:
    - name: Gather facts after waiting for nodes booted
      setup:
    - name: Kernel args block
      become: true
      block:
        - name: Fix machine-id on boot loader entries
          shell: |
            mid="$(cat /etc/machine-id)"
            echo $mid > /tmp/mid
            while IFS= read -r f
            do
              echo "/boot/loader/entries/$f" "/boot/loader/entries/$(echo $f | sed s/[[:xdigit:]]*/$mid/)" >>/tmp/mid
              mv "/boot/loader/entries/$f" "/boot/loader/entries/$(echo $f | sed s/[[:xdigit:]]*/$mid/)"
            done < <(ls /boot/loader/entries)
        - name: Configure tuned before reboot
          include_role:
            name: tuned
          vars:
            tuned_profile: '{{ tuned_profile }}'
            tuned_isolated_cores: '{{ tuned_isolated_cores }}'
        - name: Configure kernel args and reboot
          include_role:
            name: tripleo_kernel
            tasks_from: kernelargs.yml
          vars:
            tripleo_kernel_args: '{{ kernel_args }}'
            tripleo_kernel_reboot_timeout: '{{ reboot_wait_timeout }}'
            tripleo_kernel_defer_reboot: '{{ defer_reboot }}'

