#!/bin/bash
set -x

resources_type={{ resources_type }}
server_user_name={{ server_user_name }}
packet_loss_threshold={{ packet_loss_threshold }}

check_if_pinger_stopped(){
    [ "$2" == "quick" ] && wait_time=1 || wait_time=10
    size=$(stat --format=%s $file)
    [ $size -eq 0 ] && echo "Log file is empty, something went wrong" && exit 1
    until grep 'packet loss' $file; do
        sleep 1
        wait_time=$((wait_time-1))
        [ $wait_time -eq 0 ] && echo "Can't find ping result summary in the pinger log"  && exit 1
    done
}

validate(){
    packets_total=$( grep 'packet loss' $1 | cut -d' ' -f 1 )
    packets_received=$( grep 'packet loss' $1 | cut -d' ' -f 4 )
    ping_result=$(( packets_total - packets_received ))

    if [ $ping_result -gt $packet_loss_threshold ]; then
        echo "$1: Ping loss higher than $packet_loss_threshold packets detected ($ping_result packets)"
        exit 1
    fi
    echo "$1: Passed validation"
}

file_list=`ls {{ ovn_migration_temp_dir }}/*ping.out`
[ "$file_list" == "" ] && echo "No pinger log files found. Something went wrong." && exit 1

for file in $file_list; do
    check_if_pinger_stopped $file
    validate $file
done

if [[ "$resources_type" =~ "trunk" ]]; then
    for fip in `cat {{ ovn_migration_temp_dir }}/server_fips`;do
	ssh $server_user_name@$fip pkill --signal SIGINT ping
	sleep 2
	mkdir -p {{ ovn_migration_temp_dir }}/ping_output/$fip
        timeout 10 scp "$server_user_name@$fip:ping_*_output" {{ ovn_migration_temp_dir }}/ping_output/$fip
    done
    file_list=`find {{ ovn_migration_temp_dir }}/ping_output -type f`
    [ "$file_list" == "" ] && echo "No pinger log files found. Something went wrong." && exit 1
    for file in $file_list; do
        check_if_pinger_stopped $file quick
        validate $file
    done
fi
